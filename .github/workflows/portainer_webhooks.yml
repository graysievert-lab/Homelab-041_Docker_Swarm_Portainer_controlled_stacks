name: Trigger webhook on stack directory change

on:
  push:
    branches:
      - master

jobs:
  changed_files:
    runs-on: [self-hosted]
    name: Get changed files and trigger webhooks
    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 2  # To retrieve the preceding commit.

      - name: Get changed files
        id: changed-files
        uses: tj-actions/changed-files@v45
        with:
          dir_names: true                           # Output unique changed directories instead of filenames.
          dir_names_exclude_current_dir: true       # Exclude the current directory represented by `.` from the output when `dir_names` is set to `true`.
          files: 'stack-*/**'                       # File and directory patterns used to detect changes (Defaults to the entire repo if unset)
          dir_names_max_depth: '1'                  # Limit the directory output to a maximum depth

      - name: Trigger webhooks for changed 'stack-*' directories
        env:
          ALL_CHANGED_FILES: ${{ steps.changed-files.outputs.all_changed_files }}
        run: |
          if [ -n "$ALL_CHANGED_FILES" ]; then          

              for dir in $ALL_CHANGED_FILES; do
                  
                  echo "$dir was changed"
                  webhook_file="$dir/webhook"

                  # Check if the webhook file present
                  if [ -s "$webhook_file" ]; then
                      # Read the first line from the webhook file
                      url=$(head -n 1 "$webhook_file")

                      # Validate that first line is a URL
                      case "$url" in
                          http://* | https://*)
                              echo "Triggering webhook for \"$dir\" at \"$url\""
                              # as no data expected back, closing connection after 2 seconds ensuring 0 exit code
                              curl -s -o /dev/null -m 2 -X POST "$url" || true
                              ;;
                          *)
                              echo "Invalid URL \"$url\" in \"$webhook_file\""
                              ;;
                      esac
                  else
                      echo "No webhook file found in \"$dir\" or it is empty"
                  fi
              done
          else
              echo "No actionable changes detected."
          fi